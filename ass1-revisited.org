#+TITLE: SOD Assignment 1: Revisited
#+AUTHOR: Jacob Sonnenberg
* TODO Introduction
** Purpose
   This document presents a design aimed at reducing waste, caused by
   a university cafeteria over-producing food, by using a pre-ordering
   service along with historical analysis to provide accurate
   short-term demand estimates as well as insight into overall trends.
** TODO Assumptions
** TODO Terminology
   #+BEGIN_SRC dot :file res/decomp_example.png :tangle res/decomp_example.dot
   digraph G {
             label="Template for Service Decomposition";
	     Service;
	     Component1, Component2;
	     Service->Component1 [label="<<include>>"];
	     Service->Component2 [style=dashed dir=back arrowtail=empty label="<<extend>>"]
   }
   #+END_SRC

   #+attr_latex: :width 7cm
   #+RESULTS:
   [[file:res/decomp_example.png]]

   #+BEGIN_SRC dot :file res/qoc_example.png :tangle res/qoc_example.dot
     graph G {
	     label="Template for QOC Diagram"
	     rankdir=LR;

	     Question;
	     Option1 [label="Chosen\nOption" color=green];
	     Option2 [label="Rejected\nOption" color=red];
	     Criterion1;
	     Criterion2;

	     {rank=min Question}
	     {rank=same Option1, Option2}
	     {rank=same Criterion1, Criterion2}

	     Question--{Option1, Option2};
	     Option1--Criterion1 [label="Positive Assess." color=green];
	     Option2--Criterion1 [label="Neutral Assess."]
	     Option2--Criterion2 [color=red label="Negative Assess."];
     }
   #+END_SRC

   #+RESULTS:
   [[file:res/qoc_example.png]]

* DONE Business Domain
** DONE Usage Scenarios
*** Student Case
    Frank and Giorgia are sitting in class taking notes on their
    laptops. They want to eat at the Cafeteria before their next
    lecture. The University Cafeteria has a wide variety of food
    available, and Frank is hungry so he looks up the Cafeteria's menu
    and decides to get fish and chips with a side of salad. Giorgia
    does the same, but also places an order and schedules to pick it
    up in thirty minutes.
    
    Frank and Giorgia leave class and go the Cafeteria. When they
    arrive Frank looks around for his desired meal, but does not see
    it. Another batch of fish and chips is being made and he'll have
    to wait or choose something else. 

    Giorgia instead goes to a kiosk labeled "Pick-up" and tells the
    clerk her name and order number. The clerk fetches her meal, and
    she goes to pay the cashier.
*** Cafeteria Case
    At the beginning of a new day cooks in the Cafeteria begin
    preparing that day's meals. This is the core menu.

    They also prepare some meals that have already been ordered for
    the morning. Which are placed in temporary storage, organized for
    quick retrieval and preserved to keep the hot and cold items
    fresh. Students come and go picking up their orders, or taking
    time choosing a meal. Some 

    The kitchen notices that a particular item is selling less than
    usual and by the end of the day there looks to be an excess amount
    of waste. The kitchen signals to the computer system that it
    should promote this item in some way. Either through a banner in
    the app, placing the item nearer to the top of the menu, putting
    on a token sale of the item, or whatever other promotional
    method.

    At the end of the month the kitchen notices that some items were
    unpopular based off of the sales statistics. The kitchen then
    decides that they will take those items off the menu, or make less
    for the next month.
** DONE Participants
*** Stakeholders
**** *University*

     The University is a service provider and will provide a
     preordering service for students and a notification service for
     the Cafeteria, informing it of students' orders. As a part of the
     preorder service, the University will also consume the services
     of a Digital Bank.

     Additionally the University will be recording transactions made
     through the preorder service (and those made without it) so that
     the data may later be analyzed.

**** *Digital Bank*

     A Digital Bank provides a digital payment service, processing
     pre-order payments made Students that intend to pay at the time
     of pre-ordering.

*** Users
**** *Cafeteria*

     The Cafeteria serves food to Students, receiving orders directly
     from a student or indirectly via the University's
     preorder/notification service. The Cafeteria will also report
     sales and unsold product. The Cafeteria produces the supply.

**** *Students*

     A Student of the University is a customer of the
     Cafeteria. Students are the entities which generate demand.
** Model
   #+BEGIN_SRC dot :file res/business_domain.png :tangle res/business_domain.dot
     digraph BznsDmn {
	     label="Business Domain Model"
	     rankdir=LR;
	     newrank=true;

	     node [fontsize=20 shape=box]

	     node [color=red]
	     Stakeholders [fontsize=14 fontcolor=red shape=plaintext];
	     University;
	     DigitalBank;

	     node [color=blue]
	     Users [fontsize=14 fontcolor=blue shape=plaintext];
	     Cafeteria;
	     Student;

	     edge [fontsize=14]
	     University->Cafeteria	[label="Notifies"];
	     Student->University	[label="Pays"];
	     Student->DigitalBank	[label="Pays"];
	     Student->University	[label="Preorders"];
	     DigitalBank->Student	[label="Charges"];
	     Cafeteria->University 	[label="Reports"];
	     University->DigitalBank    [label="Payment\nService"]

	     // Proxy actions
	     node [fontsize=14 shape=plaintext height=0 margin=0]
	     Analyzes;
	     Records;
	     Serves;
	     edge [dir=both arrowtail=none arrowhead=none]
	     University->Records;
	     University->Analyzes;
	     Cafeteria->Serves;
	     edge [arrowhead=normal arrowtail=none]
	     Records->University;
	     Analyzes->University;
	     Serves->Student;

	     {rank=min Analyzes, Records}
	     {rank=same Stakeholders, University, DigitalBank}
	     {rank=same Users, Student, Cafeteria, Serves, Users}

     }
   #+END_SRC

   #+attr_latex: :height 8cm
   #+RESULTS:
   [[file:res/business_domain.png]]

** Conceptual Services
   This section contains a list of every service that could be related
   to the operation of the proposed system. In it are both software
   and non-software services, we will describe the details of some of
   the former and assume the latter will be provided by other
   entities.
*** Preorder Service                                                 :hybrid:
    :PROPERTIES:
    :UNNUMBERED: t
    :END:
    The service by which Students can communicate their demand ahead
    of time.
**** *Authorization Service*                                        :utility:

     Provided by the University for the Students, Cafeteria, and
     University Administrators. Serves as a secure gateway for
     accessing software components of the system.

***** Registration Service                                          :utility:
***** Login Service                                                 :utility:

**** *Online Ordering Service*                                       :hybrid:

     Provided by the University for the Students. An internet gateway
     Students use to interact with the system.

***** (Menu) Viewing Service                                         :entity:
***** Shopping Cart Service                                          :entity:
***** Scheduling Service                                               :task:
**** *Notification Service*                                            :task:

     Provided by the University to the Cafeteria. Informs the
     Cafeteria of what orders have been placed, the contents of the
     order and the desired pickup time.

**** *Digital Payment Service*                                      :utility:

     Provided by the Digital Bank stakeholder, if the Student wishes
     to pay at the time of preordering, they are transferred to the
     Digital Bank's service in order to complete the payment.

**** *Food Service*                                                    :task:

     Non-software service provided the Cafeteria, performing manual
     labor required to complete orders.

***** Food Preparation Service                                         :task:

      Fulfillment of Student orders.

***** Order Validation Service                                         :task:

      Matching of a Student to their order at pickup.

***** Food Fetching Service                                            :task:

      Retrieval of a Student's order at pickup.

*** Prediction Service                                               :hybrid:
    :PROPERTIES:
    :UNNUMBERED: t
    :END:
    The service by which a prediction of demand in the short and long
    term is made.
**** *Analysis Service*                                              :entity:

     Owned by the University. Analyzes collected data in order to
     develop a model for future demand.

**** *Monitor Service*                                                 :task:

     Owned by the University. Records orders made through the preorder
     service or collects data regarding the other sales made at the
     Cafeteria.

***** Reporting Service                                             :utility:

      Provided for the Cafeteria by the University. The Cafeteria
      reports sales made, preorders fulfilled, and excess production.

**** *Data Storage Service*                                            :task:

     The data the University collects on orders needs to be stored
     somewhere, whether this is done on an owned asset or if though a
     service provided by another stakeholder.

**** *(Data) Viewing Service*                                        :entity:

     The data which has been stored must be accessible for the
     University to perform analysis.

*** Menu Changing Service                                              :task:
    :PROPERTIES:
    :UNNUMBERED: t
    :END:

    The Cafeteria has to be able to change the menu from week to week,
    or over whatever time period the menu changes.

*** View Service                                                     :entity:
    :PROPERTIES:
    :UNNUMBERED: t
    :END:
* Functional Requirements

  In this section we list some of the functional requirements that our
  services, as they are described, must fulfill. They have been
  derived from the services outlined in the [[*Conceptual Services][Conceptual Services]]
  section. The format is:

  + *ID : /Name/*

    Short Description

  For our purposes we will select functional requirements most
  relevant to the problem of accurately predicting demand. To this end
  we will be concerned with FR-01 (/Placing Orders/), FR-04 (/Record
  Transactions/), and FR-08 (/Trend Analysis/). These three functions
  form a skeleton of the proposed service: when a Student places an
  order, that data is collected by the University and saved for future
  analysis. This means we will neglecting the Digital Bank
  stakeholder, and perhaps only touching the actions of the
  Cafeteria. The other functionalities listed are necessary but
  peripheral to the core intent of this proposal.

#+latex: \newpage
** /Requirements/
   :PROPERTIES:
   :UNNUMBERED: t
   :END:
*** * <<<FR-01>>> : /Placing Orders/
    A Student must be able to place an order without being physically
    present at the Cafeteria
*** <<<FR-02>>> : /Schedule Pickup/
    As an order is placed, the Student should also be able to specify
    a time they wish to obtain their order.
*** <<<FR-03>>> : /Electronic Payment/
    A Student should be able to optionally pay at the time of placing
    their order.
*** * <<<FR-04>>> : /Record Transactions/
    Each transaction made must be recorded.
*** <<<FR-05>>> : /Send Transactions Records/
    If a transaction is not made through the preorder system, the
    Cafeteria must still report it to the University.
*** <<<FR-06>>> : /Send Cafeteria Orders/
    There must be a system in place so that the Cafeteria receives
    preorders as soon as possible.
*** <<<FR-07>>> : /Authorization/
    The system must be properly secured so that users of the system
    may register, log in, and perform whatever actions that particular
    user is permitted and no others.
*** * <<<FR-08>>> : /Trend Analysis/
    The system must have some way of extrapolating demand based on the
    number of preorders, correlated with historical data.

    -------

    All this and more...
#+latex: \newpage
* Quality Requirements

  This section will discuss the most important qualities in
  considering the problem of more accurately predicting and meeting
  demand. For clarity we will use standard[fn:1] definitions.

** <<<QR-01>>> : /Security/
   + Definition :: degree to which a product or system protects
                   information and data so that persons or other
                   products or systems have the degree of data access
                   appropriate to their types and levels of
                   authorization


   We choose security because adoption of the system is predicated on
   security. If the system is not secure and leaks important
   information, or is otherwise compromised, trust in the system will
   diminish to nothing. Any security faults regarding the online
   payment process would be especially deleterious.
** <<<QR-02>>> : /Availability/
   + Definition :: degree to which a system, product or component is
                   operational and accessible when required for use


   The system must be reliably available to users on campus and off,
   with as little down-time as possible. The end users rely on the
   preorder service to order food ahead of time, and the University
   relies on it to develop a model for demand.

** <<<QR-03>>> : /Usability/
   + Definition :: degree to which a product or system can be used by
                   specified users to achieve specified goals with
                   effectiveness, efficiency and satisfaction in a
                   specified context of use


   The students will want to be able to use the services quickly and
   easily, because they only need to browse through the menu and place
   an order, regardless of the device. If the service is too complex
   to use they will not make pre-ordering a habit which contradicts
   our goal of changing Student behavior to thinking ahead about what
   they should eat.

   Users of the system on the side of the Cafeteria should also have
   an easy time navigating it. A minimal requirement of knowledge
   should be required to use it and a minimal number of actions
   required to operate it.
** COMMENT TODO <<<QR-04>>> : /Reliability/
   + Definition :: degree to which a system, product or component
                   performs specified functions under specified
                   conditions for a specified period of time
* Business Services
** <<<BS-01>>> : /Transaction Recording/
*** Involved Participants
    | University | Cafeteria |
*** TODO Detailed Operational Description
    This service operates as a log for tracking the transaction
    history of the system, recording both transactions made at the
    Cafeteria and through the Preorder Service. The Transaction
    Recording Service also manages the transactions for meals ordered
    locally or pre-ordered, upon payment, and allows the staff to
    retrieve and verify the transaction log. These records will also
    be used by the "Statistical Analysis Service" to generate
    statistics.
*** Service Behavior
    In this first activity diagram we will be more explicit about each
    service involved, but we will abstract some (Authentication and
    Response) away to simplify the other activity diagrams.

    #+BEGIN_SRC dot :file res/bs_01_act.png :tangle res/bs_01_act.dot
      digraph BS1 {
	      label="BS-01 (Transaction Recording) Activity Diagram";
	      newrank=true;
	      splines=polyline;
	      // Terminals
	      Start [shape=point height=0.2 width=0.2];
	      End [shape=point height=0.2 width=0.2 peripheries=2];
	      // Choices
	      node [shape=diamond fixedsize=true height=0.5 width=1.5 color=orange style=filled]
	      choose_request [label="What type of request?"];
	      choose_valid_user [label="Is this user valid?"];

	      {rank=same choose_request, choose_valid_user}
	      // Remaining Nodes & Clusters
	      node [shape=box color=white style=filled]
	      subgraph cluster0 {
		      label="Authentication Service"
		      color=lightgrey
		      style=filled
		      AuthUser [label="Authenticate User"];
		      choose_valid_user;
		      AuthUser->choose_valid_user;
	      }
	      Start->AuthUser;
	      choose_valid_user->StructureResponse_join [label="No"];
	      choose_valid_user->choose_request [label="Yes"];
	      choose_request->ViewSales [label="View\nStatistics"];
	      choose_request->StoreData [label="Put\nData"];
	      subgraph cluster5 {
		      label="Preorder Service"
		      color=lightgrey
		      style=filled
		      OrderNotifications;
	      }
	      OrderNotifications->MonitorSales;
	      subgraph cluster1 {
		      label="Monitor Service"
		      color=lightgrey
		      style=filled
		      RegisterSensor;
		      MonitorSales;
		      RegisterSensor->MonitorSales;
	      }
	      MonitorSales->StoreData;
	      subgraph cluster2 {
		      label="Storage Service"
		      color=lightgrey
		      style=filled
		      StoreData;
	      }
	      // {rank=same Analyze, ViewAnalysis}
	      StoreData->StructureResponse_join;
	      subgraph cluster3 {
		      label="View Service"
		      color=lightgrey
		      style=filled
		      ViewSales;
	      }
	      ViewSales->StructureResponse_join;
	      subgraph cluster4 {
		      label="Response Service"
		      color=lightgrey
		      style=filled
		      StructureResponse;
		      SendResponse;
		      {rank=same StructureResponse, SendResponse}
		      StructureResponse->SendResponse;
	      }

	      StructureResponse_join [label="" shape=diamond height=0.3 width=0.3 style=normal color=black]
	      StructureResponse_join->StructureResponse;

	      SendResponse->End;
      }
    #+END_SRC


    #+RESULTS:
    [[file:res/bs_01_act.png]]
*** Service Decomposition
    #+BEGIN_SRC dot :file res/bs_01_dcmp.png :tangle res/bs_01_dcmp.dot
      digraph BS1 {
	      label="BS-01 (Transaction Recording) Service Decomposition";
	      rankdir=LR;
	      AuthenticationService;
	      RecordTransactions;
	      MonitorService;
	      ViewService;
	      StorageService;

	      RecordTransactions->{AuthenticationService,MonitorService, ViewService, StorageService};
	      edge [style=dashed dir=back arrowtail=empty];
	      RecordTransactions->{PreorderService};

      }
    #+END_SRC

    #+RESULTS:
    [[file:res/bs_01_dcmp.png]]
#+latex: \newpage

** <<<BS-02>>> : /Statistical Analysis/
*** TODO Involved Participants
    | University |
*** TODO Detailed Operational Description
    After successful login, the administrator can use the Statistics
    Options. They can view statistical data during some timeline or
    insert how much food waste in kg was measured for a specific time
    period by the cafeteria staff. Whatever their choice, the request
    is sent and handled by the Statistical Analysis Service.

    The Service initially asks for login credentials. If the
    credentials are valid, it identifies whether the user asks for
    statistical data or wishes to store new information. If they want
    to view an analysis, the relevant information is retrieved and
    analyzed and view data is produced, that corresponds to the graphs
    or other views that will display this analysis. On the other hand,
    the information about the weight measurement is stored.

    This Service does not deal with registering new administrators in
    the system. This could be handled by another service, as it
    requires information and actions irrelevant with the statistical
    analysis.
*** DONE Service Behavior
    #+BEGIN_SRC dot :file res/bs_02_act.png :tangle res/bs_02_act.dot
      digraph BS2 {
	      label="BS-02 (Statistical Analysis) Activity Diagram";
	      newrank=true;
	      splines=polyline;
	      // Terminals
	      Start [shape=point height=0.2 width=0.2];
	      End [shape=point height=0.2 width=0.2 peripheries=2];
	      // Choices
	      node [shape=diamond fixedsize=true height=0.5 width=1.5 color=orange style=filled]
	      choose_request [label="What type of request?"];

	      // {rank=same choose_request, choose_valid_user}
	      // Abstracted Services
	      node [shape=box color=lightgrey style=filled]
	      AuthService, ResponseService;
	      // Remaining Nodes & Clusters
	      node [shape=box color=white style=filled]
	      Start->AuthService->choose_request;
	      choose_request->Retrieve [label="View\nStatistics"];
	      choose_request->StoreData [label="Put\nData"];
	      subgraph cluster1 {
		      label="Statistics Service"
		      color=lightgrey
		      style=filled
		      Retrieve [label="Retrieve Relevant\nData"]
		      Analyze [label="Analyze Data"];
		      Retrieve->Analyze;
	      }
	      Analyze->ViewAnalysis;
	      subgraph cluster2 {
		      label="Storage Service"
		      color=lightgrey
		      style=filled
		      StoreData;
	      }
	      {rank=same StoreData, Retrieve}
	      // {rank=same Analyze, ViewAnalysis}
	      StoreData->StructureResponse_join;
	      subgraph cluster3 {
		      label="View Service"
		      color=lightgrey
		      style=filled
		      ViewAnalysis;
	      }
	      ViewAnalysis->StructureResponse_join;


	      StructureResponse_join [label="" shape=diamond height=0.3 width=0.3 style=normal color=black]
	      StructureResponse_join->ResponseService;

	      ResponseService->End;
      }
    #+END_SRC

    #+attr_latex: :height 16.3cm
    #+RESULTS:
    [[file:res/bs_02_act.png]]
*** DONE Service Candidates Decomposition
    #+BEGIN_SRC dot :file res/bs_02_dcmp.png :tangle res/bs_02_dcmp.dot
      digraph BS2 {
	      label="BS-02 (Statistical Analysis) Service Decomposition";
	      rankdir=LR;
	      AnalysisService;
	      AuthenticationService;
	      StatisticService;
	      ViewService;
	      StorageService;
	      ResponseService;

	      // edge [style=dashed dir=back arrowtail=empty]
	      AnalysisService->{AuthenticationService,StatisticService,
				ViewService,StorageService,ResponseService}
      }
    #+END_SRC

    #+RESULTS:
    [[file:res/bs_02_dcmp.png]]
#+latex: \newpage
** <<<BS-03>>> : /Preordering/
*** DONE Involved Participants
    | Students | University | Digital Bank |
*** TODO Detailed Operational Description
    A Student may order food from the Cafeteria ahead of
    arriving. This may be done through an web or a phone app which
    serves as the Student's interface to the system. An authorized
    user logs in, and is presented with the home screen, presenting
    whatever new information about menu items or new deal that the
    administrators want.

    From the home screen the user can log out, view the menu, or view
    their past orders. The user may repeat or edit an order from
    their history, or fill out a new order from the menu. After
    completing an order the user schedules a time to pick up their
    order and receives a number to give the cashier. In finalizing the
    order the Student may also choose to pay online or at the time of
    pickup.
*** DONE Service Behavior
    #+BEGIN_SRC dot :file res/bs_03_act.png :tangle res/bs_03_act.dot
      digraph BS3 {
	      label="BS-03 (Preorder) Activity Diagram";
	      newrank=true;
	      splines=polyline;
	      // Terminals
	      Start [shape=point height=0.2 width=0.2];
	      End [shape=point height=0.2 width=0.2 peripheries=2];
	      // Choices
	      node [shape=diamond fixedsize=true height=0.5 width=1.5 color=orange style=filled]
	      choose_request [label="What type of request?"];
	      choose_payment [label="Is the user paying now?"];

	      // Abstracted Services
	      node [shape=box color=lightgrey style=filled]
	      AuthService, ResponseService;
	      // Remaining Nodes & Clusters
	      node [shape=box color=white style=filled]
	      Start->AuthService->choose_request;
	      // choose_valid_user->StructureResponse_join [label="No"];
	      // choose_valid_user->choose_request [label="Yes"];
	      choose_request->ViewMenu [label="View\nMenu"];
	      choose_request->AddMenuItems [label="Place\nOrder"];
	      {rank=same ViewMenu, AddMenuItems}
	      subgraph cluster1 {
		      label="Order Service"
		      color=lightgrey
		      style=filled
		      AddMenuItems [label="Add Menu Items"]
		      SchedulePickup [label="Schedule Pickup"];
		      AddMenuItems->SchedulePickup;
	      }

	      SchedulePickup->choose_payment;
	      choose_payment->PayForOrder [label="Yes"];
	      choose_payment->StructureResponse_join [label="No"];

	      subgraph cluster2 {
		      label="Payment Service"
		      color=lightgrey
		      style=filled
		      PayForOrder;
	      }
	      PayForOrder->StructureResponse_join;
	      subgraph cluster3 {
		      label="View Service"
		      color=lightgrey
		      style=filled
		      ViewMenu;
	      }
	      ViewMenu->StructureResponse_join;
	      StructureResponse_join [label="" shape=diamond height=0.3 width=0.3 style=normal color=black]
	      StructureResponse_join->ResponseService;

	      ResponseService->End;
      }
    #+END_SRC

    #+attr_latex: :height 16cm
    #+RESULTS:
    [[file:res/bs_03_act.png]]
*** DONE Service Decomposition
    #+BEGIN_SRC dot :file res/bs_03_dcmp.png :tangle res/bs_03_dcmp.dot
      digraph BS3 {
	      label="BS-03 (Preordering) Service Decomposition";
	      nodesep=0.1;
	      rankdir=LR;
	      // Hybrid, Task, Entity, Utility [shape=plaintext];

	      Preorder;
	      OrderService;
	      AuthenticationService;
	      ViewService;
	      NotificationService;
	      ResponseService;
	      PaymentService;


	      Preorder->{AuthenticationService,NotificationService,
	      OrderService, ViewService,ResponseService}
	      edge [style=dashed dir=back arrowtail=empty]
	      Preorder->{PaymentService};
      }
    #+END_SRC

    #+RESULTS:
    [[file:res/bs_03_dcmp.png]]

#+latex: \newpage
* Design Space
** AK-SPAM 1
   :PROPERTIES:
   :UNNUMBERED: t
   :END:
*** Concern
    + Con#1 :: How can the user be encouraged to use the pre-ordering
               system? Are there any barriers or concerns that the
               customer or business would have that would make them
               not want to use it, undercutting the primary goal of
               reducing waste via this system?
*** Criteria
    + Cr#1 :: Security
    + Cr#2 :: Availability
    + Cr#3 :: Usability
*** Options
**** Trusted Third Party Payment
     + ID :: Con#1-Opt#1
     + Description :: Pre-order payment should be done through a
                      trusted and known third party with experience so
                      the process is secure.
     + Status :: Decided
     + Relationship(s) :: none
     + Evaluation :: ---
       + Cr#1 --- This option is secure as long as the third party
         maintains integrity. While we have a less control over the
         security of the system, a third-party payment processing
         company's business is predicated on security, so we assess
         this positively.
       + Cr#2 --- This option's availability depends again on the
         third party, it is partially out of our control, depending on
         the service model of the third party.
       + Cr#3 --- This option should have positive usability,
         especially if it is through an already common service that
         Students already use.
     + Rationale :: Given that the third-party processing company is
                    of repute, this option should have the best
                    security, availability, and usability. The same
                    functionality is achieved as implementing it
                    in-house but with a slight recurring cost.
**** Payment on Pickup
     + ID :: Con#1-Opt#2
     + Description :: There is no online payment system, the customer
                      pays for items upon receipt.
     + Status :: Rejected
     + Relationship(s) :: none
     + Evaluation :: ---
       + Cr#1 --- This option is as secure as the Cafeteria itself. No
         additional attack vectors are added to the existing
         infrastructure.
       + Cr#2 --- The rest of the system may still have high
         availability, but payment is only available when at the
         Cafeteria, so this option has a negative effect on
         availability.
       + Cr#3 --- This option does nothing to improve usability,
         it does not enable Students to complete payment more than
         without the system so we assess this as negative in the
         usability dimension.
     + Rationale :: No significant functionality is added, nor are the
                    qualities we listed improved by Payment on Pickup,
                    so we reject this option
**** In-house Payment System
     + ID :: Con#1-Opt#3
     + Description :: Online payment is done via a system we've
                      implemented
     + Status :: Rejected
     + Relationship(s) :: none
     + Evaluation :: ---
       + Cr#1 --- This option has implications for
         security. Implementing a payment handling
         system creates a dangerous potential attack
         vector and lost trust is hard to regain.
       + Cr#2 --- This option could be more or less reliable than
         Con#1-Opt#1 depending on the quality and architecture of the
         implementation.
       + Cr#3 --- This option could be integrated into our solutions
         even more than Con#1-Opt#1 because of its in-house nature and
         provide a better user experience.
     + Rationale :: The option is strongly depends on the quality of
                    the developed in-house system and its superiority
                    in terms of cost and effectiveness.
*** QOC Diagram
    #+BEGIN_SRC dot :file res/qoc_01.png :tangle res/qoc_01.dot
    graph G {
            label="QOC Diagram for Con#1"
	    Question [label="Q: How can the user\nbe encouraged to use\nthe preordering sytem?"];
	    node [color=green]
	    Option1 [label="O: Trusted Third\nParty Payment"]
	    node [color=red]
	    Option2 [label="O: Payment\non Pickup"];
	    Option3 [label="O: In-house\nPayment System"];
	    {rank=same Option1, Option2, Option3}
	    node [color=black]
	    Criterion1 [label="C: Security"];
	    Criterion2 [label="C: Availability"];
	    Criterion3 [label="C: Usability"];
	    {rank=same Criterion1, Criterion2, Criterion3}
	    Question--{Option1, Option2, Option3};
	    Option1--{Criterion1, Criterion2, Criterion3} [color=green];
	    Option2--{Criterion1}
	    Option2--{Criterion2, Criterion3} [color=red];
	    Option3--{Criterion1} [color=red];
	    Option3--{Criterion2, Criterion3} [color=green];
    }
    #+END_SRC

    #+RESULTS:
    [[file:res/qoc_01.png]]

* TODO Sustainability Strategies
** TODO <<<SS-01>>> : Custom Pre-order Bento Boxes
   + Description :: Customizable lunch boxes which Students order
                    ahead will give insight on customer buying
                    patterns, and encourage them to take more
                    appropriate serving sizes, and enable the return
                    of uneaten food stuff.
   + Type of Strategy :: People Awareness
   + Relevance for Business Domain :: Offering stakeholders insight on
        customer buying patterns and minimizing food wastage is the
        primary aim of this system. The use of pre-packed bento boxes
        and provision for pre-orders and refunds directly helps in
        achieving this objective by spreading awareness of food
        wastage and offering incentives to follow sustainable
        practices.
*** TODO Diagram
    #+BEGIN_SRC dot :file res/ss_01.png :tangle res/ss_01.dot
      digraph G {
              rankdir=LR;
	      // splines=line;
	      Action1 [label="Statistical\nAnalysis"];
	      Action2 [label="Pre-ordering"];
	      Goal [label="Minimize Food Waste"];
	      Action1->Goal [label="Predict\nDemand"];
	      Action2->Goal [label="Communicate\nReal Demand"]
      }
    #+END_SRC

    #+RESULTS:
    [[file:res/ss_01.png]]

*** TODO QOC Mapping
* Footnotes

[fn:1] ISO/IEC 25010:2011

